<?xml version="1.0" encoding="UTF-8"?>
<idea-plugin version="2" url="https://github.com/mg6maciej/hrisey-intellij-plugin">
  <id>Hrisey Plugin</id>
  <name>Hrisey Plugin</name>
  <vendor url="https://github.com/mg6maciej" email="maciek.gorski@gmail.com">Maciej GÃ³rski</vendor>
  <version>0.2.0</version>

  <idea-version since-build="133.00"/>

  <description><![CDATA[
    A plugin that adds first-class support for Hrisey (Lombok for Android)
    ]]>
  </description>
  <category>Tools Integration</category>

  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>

  <application-components>
    <component>
      <implementation-class>de.plushnikov.intellij.plugin.LombokLoader</implementation-class>
    </component>
  </application-components>

  <extensionPoints>
    <extensionPoint name="processor" interface="de.plushnikov.intellij.plugin.processor.Processor"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <lang.psiAugmentProvider implementation="de.plushnikov.intellij.plugin.provider.LombokAugmentProvider"/>
    <implicitUsageProvider implementation="de.plushnikov.intellij.plugin.provider.LombokImplicitUsageProvider"/>
    <inspectionToolProvider implementation="de.plushnikov.intellij.plugin.provider.LombokInspectionProvider"/>
    <projectConfigurable implementation="de.plushnikov.intellij.plugin.settings.ProjectSettingsPage"/>

    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameHandler" order="FIRST"/>
    <treeGenerator implementation="de.plushnikov.intellij.plugin.extension.LombokLightMethodTreeGenerator"/>

    <lang.structureViewExtension implementation="de.plushnikov.intellij.plugin.extension.LombokStructureViewExtension"/>

    <daemon.highlightInfoFilter implementation="de.plushnikov.intellij.plugin.extension.LombokHighlightErrorFilter"/>
  </extensions>

  <extensions defaultExtensionNs="Hrisey Plugin">
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.AllArgsConstructorProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.NoArgsConstructorProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.RequiredArgsConstructorProcessor"/>

    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.LogProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4j2Processor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Slf4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.XSlf4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.CommonsLogProcessor"/>

    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.DataProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.EqualsAndHashCodeProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.GetterProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.SetterProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.ToStringProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.ValueProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.ValueExperimentalProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.WitherProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.BuilderClassProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.BuilderProcessor"/>

    <processor implementation="de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor"/>

    <processor implementation="de.plushnikov.intellij.plugin.processor.method.DelegateMethodProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.method.BuilderClassMethodProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor"/>

    <!-- lombok-pg-->
    <processor implementation="de.plushnikov.intellij.plugin.processor_pg.clazz.FluentSetterProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor_pg.clazz.SingletonProcessor"/>

    <processor implementation="de.plushnikov.intellij.plugin.processor_pg.field.EnumIdFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor_pg.field.LazyGetterFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor_pg.field.FluentSetterFieldProcessor"/>

    <!-- hrisey -->
    <processor implementation="pl.mg6.hrisey.intellij.plugin.processor.clazz.ParcelableMethodsProcessor"/>
    <processor implementation="pl.mg6.hrisey.intellij.plugin.processor.clazz.ParcelableFieldsProcessor"/>
    <processor implementation="pl.mg6.hrisey.intellij.plugin.processor.clazz.PreferencesMethodsProcessor"/>
  </extensions>

  <actions>
    <group id="LombokActionGroup" text="Lombok" description="Refactor code with lombok annotations"
           icon="/icons/lombok.png" popup="true">

      <action id="defaultLombokData" class="de.plushnikov.intellij.plugin.action.lombok.LombokDataAction"
              text="Default @Data" description="Action to replace getter/setter/equals/hashcode/toString methods with lombok @Data annotation">
      </action>
      <separator/>
      <action id="defaultLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokGetterAction"
              text="Default @Getter" description="Action to replace all getter methods with lombok @Getter annotation">
      </action>
      <action id="defaultLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokSetterAction"
              text="Default @Setter" description="Action to replace all setter methods with lombok @Setter annotation">
      </action>
      <action id="defaultLombokEqualsAndHashcode" class="de.plushnikov.intellij.plugin.action.lombok.LombokEqualsAndHashcodeAction"
              text="Default @EqualsAndHashcode" description="Action to replace equals and hashcode methods with lombok @EqualsAndHashcode annotation">
      </action>
      <action id="defaultLombokToString" class="de.plushnikov.intellij.plugin.action.lombok.LombokToStringAction"
              text="Default @ToString" description="Action to replace toString method with lombok @ToString annotation">
      </action>
      <separator/>
      <action id="defaultLombokLogger" class="de.plushnikov.intellij.plugin.action.lombok.LombokLoggerAction"
              text="@Log (and friends)" description="Action to replace logger with lombok @Log annotation">
      </action>

      <!--<separator/>-->
      <!--<action id="generalLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.RefactorGetterAction"-->
      <!--text="Selectable @Getter"-->
      <!--description="Action to replace some getter methods with lombok @Getter annotation">-->
      <!--</action>-->
      <!--<action id="generalLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.RefactorSetterAction"-->
      <!--text="Selectable @Setter"-->
      <!--description="Action to replace some setter methods with lombok @Setter annotation">-->
      <!--</action>-->

      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
    <group id="DelombokActionGroup" text="Delombok" description="Refactor code removing lombok annotations"
           icon="/icons/delombok.png" popup="true">
      <action id="delombokAny" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEverythingAction"
              text="All lombok annotations" description="Action to replace all lombok annotations with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokData" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDataAction"
              text="@Data" description="Action to replace lombok @Data annotation with vanilla java methods">
      </action>
      <action id="delombokValue" class="de.plushnikov.intellij.plugin.action.delombok.DelombokValueAction"
              text="@Value" description="Action to replace lombok @Value annotation with vanilla java methods">
      </action>
      <action id="delombokWither" class="de.plushnikov.intellij.plugin.action.delombok.DelombokWitherAction"
              text="@Wither" description="Action to replace lombok @Wither annotation with vanilla java methods">
      </action>
      <action id="delombokDelegate" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDelegateAction"
              text="@Delegate" description="Action to replace lombok @Delegate annotation with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokConstructor" class="de.plushnikov.intellij.plugin.action.delombok.DelombokConstructorAction"
              text="@Constructors"
              description="Action to replace lombok @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor annotations with vanilla java methods">
      </action>
      <action id="delombokGetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokGetterAction"
              text="@Getter" description="Action to replace lombok @Getter annotation with vanilla getter methods">
      </action>
      <action id="delombokSetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSetterAction"
              text="@Setter" description="Action to replace lombok @Setter annotation with vanilla setter methods">
      </action>
      <action id="delombokEqualsAndHashCode" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEqualsAndHashCodeAction"
              text="@EqualsAndHashCode" description="Action to replace lombok @EqualsAndHashCode annotation with vanilla java methods">
      </action>
      <action id="delombokToString" class="de.plushnikov.intellij.plugin.action.delombok.DelombokToStringAction"
              text="@ToString" description="Action to replace lombok @ToString annotation with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokLogger" class="de.plushnikov.intellij.plugin.action.delombok.DelombokLoggerAction"
              text="@Log (and friends)" description="Action to replace lombok @Log (and other) annotation with vanilla log field">
      </action>

      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
  </actions>

  <!--<li>TODO: Add generate actions for Lombok equals/hashcode, toString, getter, setter, constructor and maybe logger method</li>-->
  <!--<li>TODO: Add delombok action for @Cleanup, @Synchronized and other annotations</li>-->

  <!--TODO @Builder requires specifying 'builderClassName' if used on methods with a type parameter as return type.-->
  <!--TODO @Builder is not supported on constructors with constructor type parameters..-->
  <change-notes><![CDATA[
    <ul>
      <li>0.2.0
        <ol>
          <li>Added support for @Preferences annotation.</li>
        </ol>
      </li>
      <li>0.1.0
        <ol>
          <li>Added support for @Parcelable annotation. Class still needs to have "implements android.os.Parcelable"</li>
          <li>Based on Lombok Plugin v0.8.6</li>
        </ol>
      </li>
    </ul>
	]]>
  </change-notes>
</idea-plugin>
